# For Innovus flows, add this to ~/.profile after doing the appropriate addpkg
  alias innovus='/pkgs/cadence/2019-03/INNOVUS171/bin/innovus'
  export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/pkgs/cadence/2019-03/SSV171/tools.lnx86/lib/64bit/"

# Run Synthesis to generate a starting netlist non-physical synthesis.
cd syn/work
dc_shell   (or genus)
# Indicate to set the top design to fifo1.  There is an alias defined in .synopsys_dc.setup and genus_startup.tcl
fs
source ../scripts/dc.tcl    (or ../scripts/genus.tcl)
# it is recommended to exit the shell before sourcing the TCL script again.
exit

# Run P&R to generate a starting Floorplan with IOs for use in Synth.  Also a spot to move macros around and save results.
cd ../../apr/work
icc2_shell  (or innovus -stylus)
# Indicate to set the top design to fifo1.  There is an alias defined in .synopsys_dc.setup and enc.tcl
fs
source ../scripts/floorplan-macros2.tcl  (or ../scripts/floorplan-macros-innovus-cui.tcl)
exit

# Run P&R to generate a floorplan for Synth
cd ../../apr/work
icc2_shell  (or (innovus -stylus)
# Indicate to set the top design to fifo1.  There is an alias defined in .synopsys_dc.setup and enc.tcl
fs
source ../scripts/create_dct_floorplan2.tcl  (or ../scripts/create_genus_floorplan-cui.tcl)
exit

# Rerun synthesis with Physically aware synth.  
# This physical synth can be bypassed if using FusionCompiler if desired; other parts still must be done.
# Logical synth is still needed for FusionCompiler usage in order to set up the floorplan.
cd ../../syn/work
dc_shell -topo  (or genus)
# Indicate to set the top design to fifo1.  There is an alias defined in .synopsys_dc.setup and genus_startup.tcl
fs
source ../scripts/dct.tcl (or ../scripts/genus-phys.tcl)
# it is recommended to exit the shell before sourcing the TCL script again.
exit

# Rerun ICC and start with the physical synth netlist and proceed through full P&R flow
cd ../../apr/work
icc2_shell  (or innovus -stylus)
# Indicate to set the top design to fifo1.  There is an alias defined in .synopsys_dc.setup and enc.tcl
fs
# If you only want to run part of the flow, you can set flow "fpcr"  where f=floorplan, p=place, c=clock, r=route.
# If using FusionCompiler fc_shell and wanting to read RTL and bypassing physical synth, do this command: set fc_rtl 1
source ../scripts/icc2.tcl  (or ../scripts/innovus-cui.tcl)
# If you rerun flow, either close_lib, then rerun, or exit the icc2_shell and reenter.  (or just source ../scripts/innovus.tcl?)
exit

#Fusion Compiler option
# instead of running icc2_shell, you can run fc_shell.  Still use the icc2.tcl and other icc2 script names.
#Innovus Sylus/Common-UI mode
# instead of running innovus, run innovus -stylus.  Then source commands similar to above, but with -cui suffix.
# like innovus-cui.tcl or floorplan-macros-innovus-cui.tcl
# legacy innovus is run by starting innovus without -stylus option.  Then source the scripts with -legacy suffix.

# Check results in Primetime Static Timing Analysis in 3 modes
# Follow directions at pt/scripts/README.DMSA.SSH 
cd ../../pt/work

# FOR DMSA setup and hold combined use if you have been successful with README.DMSA.SSH 
pt_shell -multi_scenario
# Indicate to set the top design to fifo1.  There is an alias defined in .synopsys_dc.setup
fs
source ../scripts/dmsa.tcl
exit

# If you are not successful yet with README.DMSA.SSH 
pt_shell 
fs
source ../scripts/pt_max.tcl
exit
pt_shell
fs
source ../sripts/pt_min.tcl
exit

#########################################################
For selecting the design type to do your synth or ICC2 or PT runs on,
you can type "f" for fifo1
you can type "e" for RiscV ExampleRocketSystem.
you can type "o" for ORCA_TOP.  
    For ORCA_TOP, the current RTL does not have macros, but the input to ICC2 does have macros.
    I have only run dc_shell with RTL.  Otherwise, I have always run ICC2.
That will change the design_top variable through an alias set up in .synopsys*.setup in your current work directory.

##########################################################    
Directory structure:
apr/         for place and route: Icc2, Innovus, FusionCompiler
syn/         for synthesis: dc_shell, genus
pt/          for primetime sta
lec/         for logic equivalency with Conformal
sim/         for verilog simulations
syn/rtl      has the RTL
constraints  timing constraints for syn/apr/pt
cadence_cap_tech has Cadence physical technology/parasitic information

Each run area has:
work/        For running the tool.  Logfiles end up here.  Startup tcl file is here.
             Databases are sometimes saved here
reports/     For reports
scripts/     For the tool scripts
outputs/    Most outputs

##########################################################    
General configuring flow
<design_name>.design_config.tcl   Configures all tools, libraries, voltages, etc.
<design_name>.design_options.tcl  Configures some specific APR related options
<design_name>.add_ios.tcl         Configures the potential adding of IO pads to the design
<design_name>.pre/post.floorplan/place/cts/opt/route.tcl   Different TCL files that optionally run before/after a stage.


DFT options for synthesis
##########################################################
Fusion Compiler enable_dft 1 inside <design_name>.design_config.tcl 
       apr/scripts/<design_name>_fc_test.tcl
Genus: enable_dft 1 inside <design_name>.design_config.tcl
       <design_name>.dft_eco.tcl
       <design_name>.dft_config.tcl
       <design_name>.reg_eco.tcl
dc_shell: Nothing in flow yet.  source a script after synth like:
       syn/scripts/ORCA_TOP.test_basic.tcl
       syn/scripts/ORCA_TOP.test_occ.tcl

Fusion Compiler with no floorplan
##########################################################
nofp 1 inside of<design_name>.design_config.tcl
